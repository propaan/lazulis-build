{"version":3,"sources":["Sidebar.js","Components/Bloc.js","Main.js","App.js","index.js"],"names":["Sidebar","_ref","exportation","notes","onAddNote","activeNoteId","setActiveNote","React","createElement","className","onClick","map","note","id","concat","title","slice","Bloc","change","val","keyed","autof","delet","styles","handleKeyPress","e","nativeEvent","keyCode","shiftKey","console","log","preventDefault","TextareaAutosize","onKeyDownCapture","ev","value","onChange","spellCheck","style","autoFocus","Main","_React$Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","updateTitle","evt","target","setState","activeNote","updateNoteData","body","contente","handleTitleChange","event","handleListener","index","state","content","shortcut","shorts","el","brut","replaced","includes","replace","handleBodyChange","newBody","handleDeleteBlock","current","oldBody","removed","splice","handleAddBlock","actual","ref","newBlock","length","_inherits","_createClass","key","prevProps","_this2","placeholder","onKeyUp","blc","comptRef","Component","App","exportData","jsonString","encodeURIComponent","JSON","stringify","link","document","href","download","click","updatedNote","updateNote","concernedNote","find","specificId","randomUUID","uuid","newNote","textDecoration","prevState","_toConsumableArray","noteId","getActiveNote","obj","require","parse","data","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d66e89a1.chunk.js","sourcesContent":["import React from 'react'\r\nfunction Sidebar({ exportation, notes, onAddNote, activeNoteId, setActiveNote }) {\r\n\r\n    return <div className=\"app-sidebar\">\r\n        <h2>Notes</h2>\r\n        <div className=\"app-sidebar-notes\">\r\n            <div className=\"app-sidebar-note-add\" onClick={() => {\r\n                onAddNote();\r\n            }}>\r\n                <p>+ Ajouter une page</p>\r\n            </div>\r\n            <div className=\"app-sidebar-note-add\" onClick={() => {\r\n                exportation();\r\n            }}>\r\n                <p>Exporter</p>\r\n            </div>\r\n            {notes.map((note) => (\r\n                <div id=\"addNote\"\r\n                    className={`app-sidebar-note ${note.id === activeNoteId && \"active\"}`}\r\n                    onClick={() => setActiveNote(note.id)}>\r\n                    <p>{note.title.slice(0, 15)}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Sidebar;","/* eslint-disable */\r\nimport React from 'react';\r\nimport '../Styles/Bloc.css';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\nfunction Bloc({ change, val, keyed, id, autof, delet, styles }) {\r\n\r\n  const handleKeyPress = (e) => {\r\n\r\n    if (e.nativeEvent.keyCode === 13) {         \r\n        if(!e.nativeEvent.shiftKey){\r\n          if (val === \"/page\") {\r\n            console.log(\"CREEr baTARD\");\r\n            e.preventDefault();\r\n          } else {\r\n            keyed(id);\r\n            e.preventDefault();\r\n          }\r\n        }\r\n\r\n\r\n    } else if (e.nativeEvent.keyCode === 8) {\r\n      if (val === \"\" && id !== 0) {\r\n        delet(id);\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(styles);\r\n\r\n  if (autof) {\r\n    return <div>\r\n    <TextareaAutosize onKeyDownCapture={ev => {\r\n      handleKeyPress(ev);\r\n    }} id='bloc' value={val} onChange={change} \r\n    spellCheck={false} style={styles} autoFocus/>\r\n  </div>\r\n  } else {\r\n    return <div>\r\n    <TextareaAutosize onKeyDownCapture={ev => {\r\n      handleKeyPress(ev);\r\n    }} id='bloc' style={styles} value={val} onChange={change} \r\n    spellCheck={false}/>\r\n  </div>\r\n  }\r\n\r\n}\r\n\r\nexport default Bloc;","/* eslint-disable */\r\nimport React from 'react'\r\nimport Bloc from './Components/Bloc';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nclass Main extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      title: '',\r\n      ref: '',\r\n      contente:'',\r\n      body: [\r\n        {\r\n        }\r\n      ]\r\n    };\r\n    this.shortcut = {\r\n      shorts: [\r\n        {\r\n          brut: \"ajd\",\r\n          replaced: \"aujourd'hui\"\r\n        },\r\n        {\r\n          brut: \"slt\",\r\n          replaced: \"salut\"\r\n        },\r\n        {\r\n          brut: \"/lorem \",\r\n          replaced: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec convallis mollis molestie. Nunc volutpat et metus nec convallis. Phasellus velit felis, maximus sit amet faucibus sed, molestie et metus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Vivamus et ante sed nisl vestibulum posuere. Pellentesque urna tellus, ornare dapibus vehicula eu, dapibus id arcu. Donec venenatis eget lacus at blandit.\"\r\n        }\r\n        ,\r\n        {\r\n          brut: \"/raphouel \",\r\n          replaced: \"On veut pas baiser les gos les plus putes, mais boire les eaux les plus pures\"\r\n        },\r\n        {\r\n          brut: \"quoi\",\r\n          replaced: \"feur\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateNoteData(this.props.activeNote);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.activeNote !== this.props.activeNote) {\r\n      this.updateNoteData(this.props.activeNote);\r\n      console.log(this.props.activeNote);\r\n    }\r\n  }\r\n\r\n  updateTitle = (evt) => {\r\n    const val = evt.target.value;\r\n    if (val) {\r\n        this.setState({title: val});\r\n        this.props.activeNote.title = val;\r\n    }\r\n  }\r\n\r\n  updateNoteData = (activeNote) => {\r\n    this.setState({\r\n        id: activeNote.id,\r\n        title: activeNote.title,\r\n        body: activeNote.body,\r\n        contente: activeNote.contente\r\n    });\r\n\r\n}\r\n\r\n  handleTitleChange = (event) => {\r\n    this.setState({ title: event.target.value });\r\n  }\r\n\r\n  handleListener = (index) => {\r\n    let val = this.state.body[index].content;\r\n\r\n\r\n    this.shortcut.shorts.map((el) => {\r\n      console.log(el.brut + \" -> \" + el.replaced);\r\n      if(val.includes(el.brut)) {\r\n        let replaced = this.state.body[index].content.replace(el.brut, el.replaced);\r\n        this.state.body[index].content = replaced;\r\n      }\r\n    })\r\n    /*\r\n    if (val.includes(\"ajd\")) {\r\n      let replaced = this.state.body[index].content.replace(\"ajd\", \"aujourd'hui\");\r\n      this.state.body[index].content = replaced;\r\n    }\r\n    */\r\n  }\r\n\r\n  handleBodyChange = (event, index) => {\r\n\r\n    let newBody = this.state.body;\r\n    newBody[index].content = event.target.value;\r\n    this.setState({body: newBody});\r\n    this.props.activeNote.body[index].content = event.target.value\r\n\r\n    this.handleListener(index);\r\n  }\r\n\r\n  handleDeleteBlock = (current) => {\r\n    let oldBody = this.state.body;\r\n    console.log(oldBody);\r\n    const removed = oldBody.splice(current, 1);\r\n    console.log(removed);\r\n\r\n    this.setState({body: oldBody});\r\n    this.props.activeNote.body = oldBody;\r\n\r\n\r\n  }\r\n\r\n  handleAddBlock = (current) => {\r\n    let actual = current + 1;\r\n    this.setState({ref: actual});\r\n\r\n    console.log(current);\r\n    console.log(this.state.body);\r\n\r\n\r\n    let newBody = this.state.body;\r\n    let avaibleIndex = this.state.body.length;\r\n    let newBlock = {\r\n        id: avaibleIndex,\r\n        content: '',\r\n        style: {\r\n          \r\n        }\r\n    }\r\n\r\n    newBody.splice(current + 1, 0, newBlock);\r\n\r\n    this.setState({body: newBody});\r\n    this.props.activeNote.body = newBody;\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n        <div className=\"app-body\">\r\n            <div className=\"app-body-title\">\r\n                <TextareaAutosize\r\n                    id=\"title\"\r\n                    placeholder=\"Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.handleTitleChange}\r\n                    onKeyUp={evt => { this.updateTitle(evt);\r\n                        this.props.setActiveNote(this.state.id);\r\n                    }}/>\r\n            </div>\r\n            <div className=\"app-body-markdown\">\r\n                {this.props.activeNote.body.map((blc, index) => {\r\n                    console.log(\"LE \" + this.state.ref)\r\n                    //return <textarea value={this.state.body[blc.id].content} onChange={ev => {this.handleBodyChange(ev, blc.id)}}></textarea>\r\n                    if (index === this.state.ref) {\r\n                        console.log(blc);\r\n                        let compt = (\r\n                            <Bloc\r\n                              keyed={this.handleAddBlock}\r\n                              id={index}\r\n                              onClick={\"l'index est : \" +console.log(index)}\r\n                              val={blc.content}\r\n                              change={ev => {this.handleBodyChange(ev, index)}}\r\n                              ref={this.comptRef}\r\n                              autof={true}\r\n                              delet={this.handleDeleteBlock}\r\n                              styles={blc.style}\r\n                            />\r\n                          );\r\n                        return compt;\r\n                    } else {\r\n                      console.log(blc);\r\n                        let compt = (\r\n                            <Bloc\r\n                              keyed={this.handleAddBlock}\r\n                              id={index}\r\n                              val={blc.content}\r\n                              change={ev => {this.handleBodyChange(ev, index)}}\r\n                              ref={this.comptRef}\r\n                              autof={false}\r\n                              delet={this.handleDeleteBlock}\r\n                              styles={blc.style}\r\n                            />\r\n                          ); \r\n                        return compt;\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Main;\r\n","import './App.css';\nimport Sidebar from './Sidebar';\nimport uuid from 'react-uuid';\nimport Main from './Main';\nimport React from 'react'\nimport data from './JSON/data.json';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.obj = require(\"./JSON/data.json\");\n    this.state = {\n      notes: JSON.parse(JSON.stringify(data)),\n      activeNoteId: \"0\"\n    };\n  }\n\n\n\n  exportData = () => {\n    const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\n      JSON.stringify(this.state.notes)\n    )}`;\n    const link = document.createElement(\"a\");\n    link.href = jsonString;\n    link.download = \"data.json\";\n\n    link.click();\n  }\n\n  componentDidUpdate() {\n  }\n\n  updatedNote = (updateNote) => {\n    let concernedNote = this.state.notes.find((note) => note.id === updateNote.id);\n\n    if (concernedNote) {\n      console.log(concernedNote.id);\n      console.log(this.state.notes);\n    }\n\n  }\n  \n\n  onAddNote = (specificId) => {\n    const randomUUID = uuid();\n    const newNote = {\n      id: specificId || randomUUID,\n      title: \"📄Nouvelle page\",\n      contente: \"SALUT\",\n      body: [\n        {\n            id: \"0\",\n            content: '/help pour découvrir',\n            style: {\n              \"textDecoration\":\"none\"\n            }\n        }\n    ]\n    };\n    if (this.state.notes.length === 0) {\n      newNote.title = \"🏘️ Bienvenue !\";\n      newNote.id = \"0\";\n      this.setState({\n        notes: [newNote],\n        activeNoteId: newNote.id\n      });\n    } else {\n      this.setState((prevState) => ({\n        notes: [newNote, ...prevState.notes],\n        activeNoteId: newNote.id\n      }));\n    }\n    return newNote;\n  };\n\n  setActiveNote = (noteId) => {\n    this.setState({ activeNoteId: noteId });\n  };\n\n  getActiveNote = () => {\n    let activeNote = this.state.notes.find((note) => note.id === this.state.activeNoteId);\n    if (!activeNote) {\n      activeNote = this.onAddNote();\n    }\n    return activeNote;\n  };\n\n  render() {\n\n    console.log(this.state.notes);\n\n    return (\n      <div className=\"App\">\n        <Sidebar exportation={this.exportData} notes={this.state.notes} onAddNote={this.onAddNote} activeNoteId={this.state.activeNoteId} setActiveNote={this.setActiveNote} />\n        <Main activeNote={this.getActiveNote()} setActiveNote={this.setActiveNote}/>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}